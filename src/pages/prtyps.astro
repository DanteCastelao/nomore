---
import Layout from "../layouts/Layout.astro";
import ThemeChanger from "../components/ThemeChanger.astro";
import PrtypsMobile from "../components/PrtypsMobile.astro";

const response = await fetch('https://nomore-back-end.onrender.com/prtyps');
const data = await response.json();

---

<Layout title="nomore-prytps">
    <div class="container">
        <div class="gradient-top"></div>
        <div class="gradient-bottom"></div>
		<div class="logo-container">
			<div class="logo">
				<span>nomore</span>
				<div class="justified">
					<span>n</span>
					<span>m</span>
					<span>re</span>
				</div>
				<span>nm</span>
				<div class="last-word">
					<span>n</span>
					<span>m</span>
				</div>
			</div>
		</div>
		<div class="show">
            {data.map(item => (
                <div class="item">
                    <img src={`data:image/png;base64,${item.mainImageData}`} alt={item.name} />
                    <span>{item.name}</span>
                </div>
            ))}
        </div>
		<div class="menu">
            <div class="top">
                <div class="left">
                    <div class="links">
                        <a href="/shop">shop</a>
                        <a href="/prtyps" class="active">prtyps</a>
                        <a href="/info">info</a>
                    </div>
                    <div class="desktop-menu">
                        <ThemeChanger />
                    </div>
                </div>
            </div>
            <div class="mobile-menu">
            </div>
		</div>
        <div class="photos" id="photos-container">
        </div>
	</div>
    <PrtypsMobile />
    
    <script define:vars={{ data }}>
        const detailImages = data.map(item => ({
                name: item.name,
                images: item.detailImageDatas.map(detailImageData => ({
                    src: `data:image/png;base64,${detailImageData}`
                }))
        }));

        function showDetailImages(detailImages) {
            const items = document.querySelectorAll('.item');
            items.forEach((item, index) => {
                item.addEventListener('click', () => {
                    // Clear previous detail images
                    const photosContainer = document.getElementById('photos-container');
                    photosContainer.innerHTML = '';
    
                    // Display detail images for the clicked item
                    detailImages[index].images.forEach(image => {
                        const detailImage = document.createElement('div');
                        detailImage.classList.add('detail-image');
                        const img = document.createElement('img');
                        img.src = image.src;
                        img.alt = `${detailImages[index].name} - Detail Image`;
                        detailImage.appendChild(img);
                        photosContainer.appendChild(detailImage);
                    });
                });
            });
        }
        
        showDetailImages(detailImages);
    </script>
    

</Layout>

<style>
	.container {
		display: flex;
		flex-direction: row;
		height: 100%;
		padding-left: 6%;
        padding-right: 6%;
        overflow: hidden;
	}
    .gradient-top {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 10%;
        background: linear-gradient(to bottom, var(--background) 0%, rgba(0, 0, 0, 0) 100%);
    }
    .gradient-bottom {
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        height: 10%;
        background: linear-gradient(to top, var(--background) 0%, rgba(0, 0, 0, 0) 100%);
    }
    a {
        cursor: pointer;
    }
	.logo-container {
		display: flex;
		margin-top: 2rem;
		user-select: none;
	}
	.logo {
		line-height: 10rem;
		display: flex;
		flex-direction: column;
	}
	.logo span {
		font-size: clamp(1rem, 10vw, 11vw);
		font-weight: 400;
	}
	.justified {
		display: flex;
		justify-content: space-between;
	}
	.last-word {
		display: flex;
		flex-direction: column;
		line-height: 8rem;
	}
	.show {
		width: 30%;
        padding-top: 8rem;
        display: flex;
        flex-direction: column;
        gap: 6rem;
        overflow-y: scroll;
        height: 100vh;
        -ms-overflow-style: none;
        scrollbar-width: none;
        box-sizing: border-box;
        padding-bottom: 10rem;
	}
    .show::-webkit-scrollbar {
        display: none;
    }
    .item {
        display: flex;
        flex-direction: column;
        gap: 1rem;
        padding-left: 30%;
        padding-right: 30%;
        align-items: center;
        cursor: pointer;
    }
    .item span {
        text-decoration: underline;
    }
	.menu {
		display: flex;
		flex-direction: column;
		padding-top: 8rem;
        width: 5rem;
        align-items: end;
	}
    .top {
        display: flex;
        flex-direction: row;
        gap: 4rem;
		flex-grow: 1;
        padding-bottom: 12vh;
    }
    .left {
        display: flex;
        flex-direction: column;
        align-items: end;
    }
	.links {
		display: flex;
		flex-direction: column;
		gap: 1rem;
        text-transform: uppercase;
		flex-grow: 1;
	}
    .links :not(.active) {
		text-align: end;
        color: var(--text);
    }
    .collections {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }
    .collections :not(.active) {
		text-align: end;
        color: var(--text);
    }
    .filters {
        display: flex;
        flex-direction: column;
        gap: 1rem;
        min-width: 7rem;
    }
    .filters :not(.active) {
	    text-decoration: underline;
		text-align: end;
        font-size: 0.9rem;
    }
    .active {
        text-transform: lowercase;
        text-decoration: none !important; 
		text-align: end;
        font-size: 1.3rem;
        color: var(--text);
    }
    .active::before {
        content: "- ";
    }
    .photos {
        position: absolute;
        display: flex;
        flex-direction: column;
        gap: 2rem;
        padding-left: 6rem;
        height: 100%;
        overflow-y: scroll;
        padding-top: 2rem;
        box-sizing: border-box;
        -ms-overflow-style: none;
        scrollbar-width: none;
    }
    .photos::-webkit-scrollbar {
        display: none;
    }
    .desktop-menu {
        display: flex;
    }
    .mobile-menu {
        display: none;
    }
    .mobile {
		display: none;
	}
    @media screen and (max-width: 1200px) {
        .container {
            justify-content: space-between;
        }
        .menu {
            align-items: end;
            padding-bottom: 12%;
        }
        .top {
            display: flex;
            flex-direction: column;
            gap: 4rem;
        }
        .desktop-menu {
            display: none;
        }
        .mobile-menu {
            display: flex;
        }
        .filters {
            width: ;
        }
	}
    @media screen and (max-width: 800px) {
		.container {
			display: none
		}
	}
</style>
